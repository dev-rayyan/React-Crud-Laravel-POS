[{"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\index.js":"1","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\App.js":"2","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\components\\ProductList.js":"4","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\pos\\index.js":"5","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\Item.js":"6","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\Sales.js":"7","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\ErrorReq.js":"8","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\customer\\index.js":"9","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\item\\index.js":"10","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\list\\index.js":"11","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\Constants.js":"12","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\AxiosDefault.js":"13","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\Customer.js":"14","C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\components\\CustomModal\\index.js":"15","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\index.js":"16","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\App.js":"17","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\reportWebVitals.js":"18","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\ProductList.js":"19","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\CustomerList.js":"20","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\SaleList.js":"21","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\pos\\index.js":"22","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\Sales.js":"23","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\Item.js":"24","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\ErrorReq.js":"25","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\Customer.js":"26","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\item\\index.js":"27","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\customer\\index.js":"28","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\list\\index.js":"29","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\CustomModal\\index.js":"30","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\AxiosDefault.js":"31","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\Constants.js":"32"},{"size":588,"mtime":1617528938000,"results":"33","hashOfConfig":"34"},{"size":4623,"mtime":1662455451348,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1617528938000,"results":"36","hashOfConfig":"34"},{"size":8383,"mtime":1662453277871,"results":"37","hashOfConfig":"34"},{"size":16190,"mtime":1662455338598,"results":"38","hashOfConfig":"34"},{"size":653,"mtime":1617528938000,"results":"39","hashOfConfig":"34"},{"size":476,"mtime":1617528938000,"results":"40","hashOfConfig":"34"},{"size":837,"mtime":1617528938000,"results":"41","hashOfConfig":"34"},{"size":7931,"mtime":1662455397876,"results":"42","hashOfConfig":"34"},{"size":6087,"mtime":1617528938000,"results":"43","hashOfConfig":"34"},{"size":2969,"mtime":1617528938000,"results":"44","hashOfConfig":"34"},{"size":89,"mtime":1617528938000,"results":"45","hashOfConfig":"34"},{"size":399,"mtime":1660077438010,"results":"46","hashOfConfig":"34"},{"size":733,"mtime":1617528938000,"results":"47","hashOfConfig":"34"},{"size":1304,"mtime":1617528938000,"results":"48","hashOfConfig":"34"},{"size":588,"mtime":1617528938000,"results":"49","hashOfConfig":"50"},{"size":4623,"mtime":1662455451348,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1617528938000,"results":"52","hashOfConfig":"50"},{"size":8521,"mtime":1662645517600,"results":"53","hashOfConfig":"50"},{"size":8939,"mtime":1662454335657,"results":"54","hashOfConfig":"50"},{"size":3269,"mtime":1662455144062,"results":"55","hashOfConfig":"50"},{"size":16496,"mtime":1662646391284,"results":"56","hashOfConfig":"50"},{"size":476,"mtime":1617528938000,"results":"57","hashOfConfig":"50"},{"size":653,"mtime":1617528938000,"results":"58","hashOfConfig":"50"},{"size":837,"mtime":1617528938000,"results":"59","hashOfConfig":"50"},{"size":733,"mtime":1617528938000,"results":"60","hashOfConfig":"50"},{"size":7209,"mtime":1662645388322,"results":"61","hashOfConfig":"50"},{"size":7931,"mtime":1662455397876,"results":"62","hashOfConfig":"50"},{"size":2969,"mtime":1617528938000,"results":"63","hashOfConfig":"50"},{"size":1304,"mtime":1617528938000,"results":"64","hashOfConfig":"50"},{"size":399,"mtime":1660077438010,"results":"65","hashOfConfig":"50"},{"size":89,"mtime":1617528938000,"results":"66","hashOfConfig":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8xks9x",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1ivo08j",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\index.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\App.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\components\\ProductList.js",["136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Table,\r\n  Button,\r\n  ButtonGroup,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Customer from \"../pages/customer\";\r\nimport Item from \"../pages/item\";\r\nimport List from \"../pages/list\";\r\n\r\nimport ItemAPI from \"../services/request/Item\";\r\nimport SalesAPI from \"../services/request/Sales\";\r\n\r\nimport ToastError from \"../services/request/ErrorReq\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartPlus,\r\n  faEdit,\r\n  faSync,\r\n  faTimes,\r\n  faTrash,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CustomCalender = ({ value, onClick }) => (\r\n  <Button color=\"success\" onClick={onClick}>\r\n    {value}\r\n  </Button>\r\n);\r\n\r\nconst format_mysql_date = (d) => {\r\n  let month = \"\" + (d.getMonth() + 1);\r\n  let day = \"\" + d.getDate();\r\n  let year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nclass ProductList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      new_item: true,\r\n      sales: {\r\n        customer_id: 0,\r\n        customer_name: \"\",\r\n        sales_date_display: new Date(),\r\n        sales_date: format_mysql_date(new Date()),\r\n        discount: 0,\r\n        list_cart: [],\r\n        sub_total: 0,\r\n        grand_total: 0,\r\n      },\r\n      list_item: [],\r\n      editItem: {},\r\n      search_item_keyword: \"\",\r\n      refresh_animation: false,\r\n    };\r\n  }\r\n\r\n  refreshItem() {\r\n    this.setState({ refresh_animation: true });\r\n    ItemAPI.itemList()\r\n      .then((result) => {\r\n        this.setState({\r\n          list_item: result.data.data,\r\n          refresh_animation: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastError(err);\r\n        this.setState({ refresh_animation: false });\r\n      });\r\n  }\r\n\r\n  newItem = () => {\r\n    this.setState({ new_item: true, editItem: {} });\r\n    this.props.history.push(\"/products/item\");\r\n  };\r\n\r\n  editItem = (index) => {\r\n    this.setState({ new_item: false, editItem: this.state.list_item[index] });\r\n  this.props.history.push(\"/products/item\");\r\n  };\r\n\r\n  deleteItem = (index) => {\r\n    let detail = this.state.list_item[index];\r\n    let del = window.confirm(\"Delete item : \" + detail.item_name + \" ?\");\r\n    if (del) {\r\n      ItemAPI.itemDelete({ item_id: detail.item_id })\r\n        .then((result) => {\r\n          toast.success(result.data.message);\r\n          this.refreshItem();\r\n        })\r\n        .catch((err) => {\r\n          ToastError(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  componentDidUpdate() {}\r\n  componentDidMount() {\r\n    this.refreshItem();\r\n  }\r\n\r\n  render() {\r\n    const itemlist = this.state.list_item;\r\n    const searchword = this.state.search_item_keyword;\r\n    const listCart = this.state.sales.list_cart;\r\n    let disc = parseFloat(this.state.sales.discount);\r\n    let subs = 0;\r\n    this.state.sales.list_cart.forEach((obj) => {\r\n      subs += parseFloat(obj.item_subtotal);\r\n    });\r\n    let grand_total = subs - (subs * disc) / 100;\r\n    let sub_total = subs;\r\n\r\n    return (\r\n      <>\r\n      <main className=\"main-app\">\r\n      <Container className=\"container-main\" fluid>\r\n        <Row className=\"main-pos\">\r\n          <Col sm={12}>\r\n            <Col className=\"main-pos-right\" sm={12}>\r\n              <div className=\"mb-3\">\r\n                <InputGroup size=\"sm\">\r\n                  <Input\r\n                    onChange={(event) => {\r\n                      const { target } = event;\r\n                      this.setState({ search_item_keyword: target.value });\r\n                    }}\r\n                    placeholder=\"SEARCH PRODUCT HERE...\"\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <ButtonGroup title=\"Refresh item list\" size=\"sm\">\r\n                      <Button\r\n                        color=\"warning\"\r\n                        onClick={() => {\r\n                          this.refreshItem();\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon\r\n                          spin={this.state.refresh_animation}\r\n                          icon={faSync}\r\n                        />\r\n                      </Button>\r\n                      <Button color=\"primary\" onClick={this.newItem}>\r\n                        {\" \"}\r\n                        + ADD NEW ITEM\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </div>\r\n              <div>\r\n                <Table responsive hover borderless>\r\n                  <thead className=\"table-active\">\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Item</th>\r\n                      <th className=\"text-right\">Stock</th>\r\n                      <th className=\"text-right\">Price</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {itemlist\r\n                      .filter((itm) =>\r\n                        itm.item_name\r\n                          .toUpperCase()\r\n                          .includes(searchword.toUpperCase())\r\n                      )\r\n                      .map((obj, index) => {\r\n                        return (\r\n                          <tr key={index.toString()}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{obj.item_name}</td>\r\n                            <td className=\"text-right\">{obj.item_stock}</td>\r\n                            <td className=\"text-right\">{obj.item_price}</td>\r\n                            <td className=\"text-center\">\r\n                              <ButtonGroup size=\"sm\">\r\n                                <Button\r\n                                  title=\"Edit master item\"\r\n                                  color=\"warning\"\r\n                                  onClick={() => {\r\n                                    this.editItem(index);\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon icon={faEdit} /> Edit\r\n                                </Button>\r\n                                <Button\r\n                                  title=\"Delete item\"\r\n                                  onClick={() => {\r\n                                    this.deleteItem(index);\r\n                                  }}\r\n                                  color=\"danger\"\r\n                                >\r\n                                  <FontAwesomeIcon icon={faTrash} /> Delete\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n          </Container>\r\n          </main>\r\n        <Switch>\r\n          <Route exact path=\"/\" />\r\n          <Route\r\n            path=\"/customer\"\r\n            render={() => (\r\n              <Customer\r\n                new={this.state.new_customer}\r\n                callbackRequest={(id, custname) => {\r\n                  this.setCustomer(id, custname);\r\n                }}\r\n                customerDetail={this.state.editCustomer}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/list\">\r\n            <List />\r\n          </Route>\r\n          <Route\r\n            path=\"/products/item\"\r\n            render={() => (\r\n              <Item\r\n                new={this.state.new_item}\r\n                refreshItem={() => {\r\n                  this.refreshItem();\r\n                }}\r\n                itemDetail={this.state.editItem}\r\n              />\r\n            )}\r\n          />\r\n          \r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductList);\r\n",["149","150"],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\pos\\index.js",["151","152"],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\Item.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\Sales.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\ErrorReq.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\customer\\index.js",["153","154"],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\item\\index.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\pages\\list\\index.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\Constants.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\AxiosDefault.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\services\\request\\Customer.js",[],"C:\\Users\\SS COMP\\Downloads\\React Crud Laravel POS\\React Crud Laravel POS\\frontend\\src\\components\\CustomModal\\index.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\index.js",[],["155","156"],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\App.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\ProductList.js",["157","158","159","160","161","162","163","164","165","166","167","168","169"],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\CustomerList.js",["170","171"],"import React from \"react\";\r\nimport \"./index.css\";\r\nimport CustomModal from \"../components/CustomModal\";\r\nimport {\r\n  Table,\r\n  ButtonGroup,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  FormFeedback,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  Form,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport CustomerAPI from \"../services/request/Customer\";\r\nimport ToastError from \"../services/request/ErrorReq\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst customer_validation_default = {\r\n  customer_name_invalid: false,\r\n};\r\nconst customer_default = {\r\n  customer_id: 0,\r\n  customer_name: \"\",\r\n  customer_address: \"\",\r\n  customer_phone: \"\",\r\n};\r\n\r\nclass CustomerList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalDialog: false,\r\n      selected_customer: {},\r\n      list_customer: [],\r\n      customer: customer_default,\r\n      customer_validation: customer_validation_default,\r\n      is_new: true,\r\n      in_proses: false,\r\n    };\r\n  }\r\n  saveCustomer = () => {\r\n    let req = this.state.customer;\r\n    if (req.customer_name === \"\") {\r\n      this.setState({\r\n        customer_validation: {\r\n          ...this.state.customer_validation,\r\n          customer_name_invalid: true,\r\n        },\r\n      });\r\n      this.customerRef.focus();\r\n      return;\r\n    }\r\n    this.state.is_new ? this.saveNewcustomer() : this.editcustomer();\r\n  };\r\n  setCustomerToCart = (index) => {\r\n    this.props.callbackRequest(\r\n      this.state.list_customer[index].customer_id,\r\n      this.state.list_customer[index].customer_name\r\n    );\r\n  };\r\n  deleteCustomer = (id) => {\r\n    CustomerAPI.customerDelete({ customer_id: id })\r\n      .then((result) => {\r\n        toast.success(result.data.message);\r\n        this.refreshCustomer();\r\n      })\r\n      .catch((err) => {\r\n        ToastError(err);\r\n      });\r\n  };\r\n  getCustomer = (index) => {\r\n    this.setState({ customer: this.state.list_customer[index], is_new: false });\r\n    this.toggleModal();\r\n  };\r\n  saveNewcustomer() {\r\n    CustomerAPI.customerAdd(this.state.customer)\r\n      .then((result) => {\r\n        toast.success(result.data.message);\r\n        this.setState({ customer: customer_default });\r\n        this.customerRef.focus();\r\n        this.refreshCustomer();\r\n      })\r\n      .catch((err) => {\r\n        ToastError(err);\r\n      });\r\n  }\r\n  editcustomer() {\r\n    CustomerAPI.customerEdit(this.state.customer)\r\n      .then((result) => {\r\n        toast.success(result.data.message);\r\n        this.refreshCustomer();\r\n      })\r\n      .catch((err) => {\r\n        ToastError(err);\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.refreshCustomer();\r\n  }\r\n  toggleModal = () => {\r\n    this.setState({ modalDialog: !this.state.modalDialog });\r\n  };\r\n  refreshCustomer() {\r\n    CustomerAPI.customerList()\r\n      .then((result) => {\r\n        this.setState({\r\n          list_customer: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastError(err);\r\n      });\r\n  }\r\n  render() {\r\n    const customerList = this.state.list_customer;\r\n    return (\r\n      <>\r\n      <main className=\"main-app\">\r\n      <Container className=\"container-main\" fluid>\r\n        <Row className=\"main-pos\">\r\n          <Col sm={12}>\r\n            <Col className=\"main-pos-right\" sm={12}>\r\n              <div className=\"mb-3\">\r\n        <Button color=\"primary\" onClick={this.toggleModal} className=\"mb-2\">\r\n          + Add Customer\r\n        </Button>\r\n        <Table responsive hover borderless>\r\n          <thead className=\"table-active\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Phone</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customerList.map((obj, index) => {\r\n              return (\r\n                <tr key={index.toString()}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{obj.customer_name}</td>\r\n                  <td>{obj.customer_address}</td>\r\n                  <td>{obj.customer_phone}</td>\r\n                  <td className=\"text-center\">\r\n                    <ButtonGroup size=\"sm\">\r\n                      <Button\r\n                        title=\"Edit Customer\"\r\n                        color=\"warning\"\r\n                        onClick={() => {\r\n                          this.getCustomer(index);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faEdit} /> Edit\r\n                      </Button>\r\n                      <Button\r\n                        title=\"Delete Customer\"\r\n                        onClick={() => {\r\n                          this.deleteCustomer(obj.customer_id);\r\n                        }}\r\n                        color=\"danger\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} /> Delete\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n        <Modal\r\n          isOpen={this.state.modalDialog}\r\n          size=\"lg\"\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>\r\n            {this.state.is_new ? \"New Customer\" : \"Edit Customer\"}\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup row>\r\n                <Label sm={3}>Customer Name</Label>\r\n                <Col sm={8}>\r\n                  <Input\r\n                    invalid={\r\n                      this.state.customer_validation.customer_name_invalid\r\n                    }\r\n                    autoFocus\r\n                    innerRef={(ref) => {\r\n                      this.customerRef = ref;\r\n                    }}\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    name=\"customer_name\"\r\n                    value={this.state.customer.customer_name}\r\n                    placeholder=\"customer name\"\r\n                    onChange={(event) => {\r\n                      const { target } = event;\r\n                      this.setState({\r\n                        customer: {\r\n                          ...this.state.customer,\r\n                          customer_name: target.value,\r\n                        },\r\n                      });\r\n                    }}\r\n                  />\r\n                  <FormFeedback tooltip>customer name is required</FormFeedback>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label sm={3}>Customer Address</Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    invalid={\r\n                      this.state.customer_validation.customer_address_invalid\r\n                    }\r\n                    size=\"sm\"\r\n                    type=\"textarea\"\r\n                    value={this.state.customer.customer_address}\r\n                    placeholder=\"Customer address\"\r\n                    onChange={(event) => {\r\n                      const { target } = event;\r\n                      this.setState({\r\n                        customer: {\r\n                          ...this.state.customer,\r\n                          customer_address: target.value,\r\n                        },\r\n                      });\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label sm={3}>Customer Phone</Label>\r\n                <Col sm={4}>\r\n                  <Input\r\n                    invalid={\r\n                      this.state.customer_validation.customer_phone_invalid\r\n                    }\r\n                    size=\"sm\"\r\n                    type=\"text\"\r\n                    value={this.state.customer.customer_phone}\r\n                    placeholder=\"Customer phone\"\r\n                    onChange={(event) => {\r\n                      const { target } = event;\r\n                      this.setState({\r\n                        customer: {\r\n                          ...this.state.customer,\r\n                          customer_phone: target.value,\r\n                        },\r\n                      });\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </Button>{\" \"}\r\n            <Button color=\"primary\" onClick={this.saveCustomer}>\r\n              {this.state.is_new ? \"Save New\" : \"Edit Customer\"}\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        </div></Col></Col></Row></Container></main>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerList;\r\n","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\SaleList.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\pos\\index.js",["172","173"],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\Sales.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\Item.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\ErrorReq.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\Customer.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\item\\index.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\customer\\index.js",["174","175"],"import React from \"react\";\nimport \"./index.css\";\nimport CustomModal from \"../../components/CustomModal\";\nimport {\n  Table,\n  ButtonGroup,\n  Button,\n  Modal,\n  ModalHeader,\n  FormFeedback,\n  Label,\n  FormGroup,\n  Input,\n  Col,\n  Form,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport CustomerAPI from \"../../services/request/Customer\";\nimport ToastError from \"../../services/request/ErrorReq\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst customer_validation_default = {\n  customer_name_invalid: false,\n};\nconst customer_default = {\n  customer_id: 0,\n  customer_name: \"\",\n  customer_address: \"\",\n  customer_phone: \"\",\n};\n\nclass Customer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalDialog: false,\n      selected_customer: {},\n      list_customer: [],\n      customer: customer_default,\n      customer_validation: customer_validation_default,\n      is_new: true,\n      in_proses: false,\n    };\n  }\n  saveCustomer = () => {\n    let req = this.state.customer;\n    if (req.customer_name === \"\") {\n      this.setState({\n        customer_validation: {\n          ...this.state.customer_validation,\n          customer_name_invalid: true,\n        },\n      });\n      this.customerRef.focus();\n      return;\n    }\n    this.state.is_new ? this.saveNewcustomer() : this.editcustomer();\n  };\n  setCustomerToCart = (index) => {\n    this.props.callbackRequest(\n      this.state.list_customer[index].customer_id,\n      this.state.list_customer[index].customer_name\n    );\n  };\n  deleteCustomer = (id) => {\n    CustomerAPI.customerDelete({ customer_id: id })\n      .then((result) => {\n        toast.success(result.data.message);\n        this.refreshCustomer();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  };\n  getCustomer = (index) => {\n    this.setState({ customer: this.state.list_customer[index], is_new: false });\n    this.toggleModal();\n  };\n  saveNewcustomer() {\n    CustomerAPI.customerAdd(this.state.customer)\n      .then((result) => {\n        toast.success(result.data.message);\n        this.setState({ customer: customer_default });\n        this.customerRef.focus();\n        this.refreshCustomer();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  editcustomer() {\n    CustomerAPI.customerEdit(this.state.customer)\n      .then((result) => {\n        toast.success(result.data.message);\n        this.refreshCustomer();\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  componentDidMount() {\n    this.refreshCustomer();\n  }\n  toggleModal = () => {\n    this.setState({ modalDialog: !this.state.modalDialog });\n  };\n  refreshCustomer() {\n    CustomerAPI.customerList()\n      .then((result) => {\n        this.setState({\n          list_customer: result.data.data,\n        });\n      })\n      .catch((err) => {\n        ToastError(err);\n      });\n  }\n  render() {\n    const customerList = this.state.list_customer;\n    return (\n      <CustomModal title=\"Customer\">\n        <Table responsive hover borderless>\n          <thead className=\"table-active\">\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Phone</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {customerList.map((obj, index) => {\n              return (\n                <tr key={index.toString()}>\n                  <td>{index + 1}</td>\n                  <td>{obj.customer_name}</td>\n                  <td>{obj.customer_address}</td>\n                  <td>{obj.customer_phone}</td>\n                  <td className=\"text-center\">\n                    <ButtonGroup size=\"sm\">\n                      <Button\n                        title=\"Add to cart\"\n                        color=\"success\"\n                        onClick={() => {\n                          this.setCustomerToCart(index);\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faPlus} /> Add To Cart\n                      </Button>\n                      \n                    </ButtonGroup>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        <Modal\n          isOpen={this.state.modalDialog}\n          size=\"lg\"\n          toggle={this.toggleModal}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            {this.state.is_new ? \"New Customer\" : \"Edit Customer\"}\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup row>\n                <Label sm={3}>Customer Name</Label>\n                <Col sm={8}>\n                  <Input\n                    invalid={\n                      this.state.customer_validation.customer_name_invalid\n                    }\n                    autoFocus\n                    innerRef={(ref) => {\n                      this.customerRef = ref;\n                    }}\n                    size=\"sm\"\n                    type=\"text\"\n                    name=\"customer_name\"\n                    value={this.state.customer.customer_name}\n                    placeholder=\"customer name\"\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({\n                        customer: {\n                          ...this.state.customer,\n                          customer_name: target.value,\n                        },\n                      });\n                    }}\n                  />\n                  <FormFeedback tooltip>customer name is required</FormFeedback>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label sm={3}>Customer Address</Label>\n                <Col sm={9}>\n                  <Input\n                    invalid={\n                      this.state.customer_validation.customer_address_invalid\n                    }\n                    size=\"sm\"\n                    type=\"textarea\"\n                    value={this.state.customer.customer_address}\n                    placeholder=\"Customer address\"\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({\n                        customer: {\n                          ...this.state.customer,\n                          customer_address: target.value,\n                        },\n                      });\n                    }}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label sm={3}>Customer Phone</Label>\n                <Col sm={4}>\n                  <Input\n                    invalid={\n                      this.state.customer_validation.customer_phone_invalid\n                    }\n                    size=\"sm\"\n                    type=\"text\"\n                    value={this.state.customer.customer_phone}\n                    placeholder=\"Customer phone\"\n                    onChange={(event) => {\n                      const { target } = event;\n                      this.setState({\n                        customer: {\n                          ...this.state.customer,\n                          customer_phone: target.value,\n                        },\n                      });\n                    }}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggleModal}>\n              Cancel\n            </Button>{\" \"}\n            <Button color=\"primary\" onClick={this.saveCustomer}>\n              {this.state.is_new ? \"Save New\" : \"Edit Customer\"}\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </CustomModal>\n    );\n  }\n}\n\nexport default Customer;\n","C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\pages\\list\\index.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\components\\CustomModal\\index.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\request\\AxiosDefault.js",[],"C:\\Users\\SS COMP\\Desktop\\React Crud Laravel POS\\frontend\\src\\services\\Constants.js",[],{"ruleId":"176","severity":1,"message":"177","line":8,"column":3,"nodeType":"178","messageId":"179","endLine":8,"endColumn":17},{"ruleId":"176","severity":1,"message":"180","line":12,"column":3,"nodeType":"178","messageId":"179","endLine":12,"endColumn":12},{"ruleId":"176","severity":1,"message":"181","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":16},{"ruleId":"176","severity":1,"message":"182","line":19,"column":8,"nodeType":"178","messageId":"179","endLine":19,"endColumn":20},{"ruleId":"176","severity":1,"message":"183","line":20,"column":8,"nodeType":"178","messageId":"179","endLine":20,"endColumn":18},{"ruleId":"176","severity":1,"message":"184","line":28,"column":8,"nodeType":"178","messageId":"179","endLine":28,"endColumn":16},{"ruleId":"176","severity":1,"message":"185","line":34,"column":3,"nodeType":"178","messageId":"179","endLine":34,"endColumn":13},{"ruleId":"176","severity":1,"message":"186","line":37,"column":3,"nodeType":"178","messageId":"179","endLine":37,"endColumn":10},{"ruleId":"176","severity":1,"message":"187","line":39,"column":3,"nodeType":"178","messageId":"179","endLine":39,"endColumn":9},{"ruleId":"176","severity":1,"message":"188","line":42,"column":7,"nodeType":"178","messageId":"179","endLine":42,"endColumn":21},{"ruleId":"176","severity":1,"message":"189","line":131,"column":11,"nodeType":"178","messageId":"179","endLine":131,"endColumn":19},{"ruleId":"176","severity":1,"message":"190","line":137,"column":9,"nodeType":"178","messageId":"179","endLine":137,"endColumn":20},{"ruleId":"176","severity":1,"message":"191","line":138,"column":9,"nodeType":"178","messageId":"179","endLine":138,"endColumn":18},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"176","severity":1,"message":"196","line":34,"column":3,"nodeType":"178","messageId":"179","endLine":34,"endColumn":9},{"ruleId":"176","severity":1,"message":"197","line":37,"column":3,"nodeType":"178","messageId":"179","endLine":37,"endColumn":10},{"ruleId":"176","severity":1,"message":"196","line":23,"column":10,"nodeType":"178","messageId":"179","endLine":23,"endColumn":16},{"ruleId":"176","severity":1,"message":"197","line":23,"column":26,"nodeType":"178","messageId":"179","endLine":23,"endColumn":33},{"ruleId":"192","replacedBy":"198"},{"ruleId":"194","replacedBy":"199"},{"ruleId":"176","severity":1,"message":"177","line":8,"column":3,"nodeType":"178","messageId":"179","endLine":8,"endColumn":17},{"ruleId":"176","severity":1,"message":"180","line":12,"column":3,"nodeType":"178","messageId":"179","endLine":12,"endColumn":12},{"ruleId":"176","severity":1,"message":"181","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":16},{"ruleId":"176","severity":1,"message":"182","line":19,"column":8,"nodeType":"178","messageId":"179","endLine":19,"endColumn":20},{"ruleId":"176","severity":1,"message":"183","line":20,"column":8,"nodeType":"178","messageId":"179","endLine":20,"endColumn":18},{"ruleId":"176","severity":1,"message":"184","line":28,"column":8,"nodeType":"178","messageId":"179","endLine":28,"endColumn":16},{"ruleId":"176","severity":1,"message":"185","line":34,"column":3,"nodeType":"178","messageId":"179","endLine":34,"endColumn":13},{"ruleId":"176","severity":1,"message":"186","line":37,"column":3,"nodeType":"178","messageId":"179","endLine":37,"endColumn":10},{"ruleId":"176","severity":1,"message":"187","line":39,"column":3,"nodeType":"178","messageId":"179","endLine":39,"endColumn":9},{"ruleId":"176","severity":1,"message":"188","line":42,"column":7,"nodeType":"178","messageId":"179","endLine":42,"endColumn":21},{"ruleId":"176","severity":1,"message":"189","line":131,"column":11,"nodeType":"178","messageId":"179","endLine":131,"endColumn":19},{"ruleId":"176","severity":1,"message":"190","line":137,"column":9,"nodeType":"178","messageId":"179","endLine":137,"endColumn":20},{"ruleId":"176","severity":1,"message":"191","line":138,"column":9,"nodeType":"178","messageId":"179","endLine":138,"endColumn":18},{"ruleId":"176","severity":1,"message":"200","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":19},{"ruleId":"176","severity":1,"message":"201","line":25,"column":18,"nodeType":"178","messageId":"179","endLine":25,"endColumn":24},{"ruleId":"176","severity":1,"message":"196","line":34,"column":3,"nodeType":"178","messageId":"179","endLine":34,"endColumn":9},{"ruleId":"176","severity":1,"message":"197","line":37,"column":3,"nodeType":"178","messageId":"179","endLine":37,"endColumn":10},{"ruleId":"176","severity":1,"message":"196","line":23,"column":10,"nodeType":"178","messageId":"179","endLine":23,"endColumn":16},{"ruleId":"176","severity":1,"message":"197","line":23,"column":26,"nodeType":"178","messageId":"179","endLine":23,"endColumn":33},"no-unused-vars","'InputGroupText' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'NumberFormat' is defined but never used.","'DatePicker' is defined but never used.","'SalesAPI' is defined but never used.","'faCartPlus' is defined but never used.","'faTimes' is defined but never used.","'faUser' is defined but never used.","'CustomCalender' is assigned a value but never used.","'listCart' is assigned a value but never used.","'grand_total' is assigned a value but never used.","'sub_total' is assigned a value but never used.","no-native-reassign",["202"],"no-negated-in-lhs",["203"],"'faEdit' is defined but never used.","'faTrash' is defined but never used.",["202"],["203"],"'CustomModal' is defined but never used.","'faPlus' is defined but never used.","no-global-assign","no-unsafe-negation"]